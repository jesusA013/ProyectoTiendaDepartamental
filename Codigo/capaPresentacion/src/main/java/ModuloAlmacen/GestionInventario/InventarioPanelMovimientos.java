package ModuloAlmacen.GestionInventario;

import DTOs.MovimientoTablaDTO;
import Excepciones.NegocioException;
import Interfaces.IMovimientoBO;
import Interfaces.IProductoBO;
import Utilidades.JButtonCellEditor;
import Utilidades.JButtonRenderer;
import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import org.bson.types.ObjectId;

/**
 *
 * @author Ángel Ruíz García - 00000248171
 */
public class InventarioPanelMovimientos extends javax.swing.JPanel {

    private final JPanel panelCambiante;
    private final JFrame pantalla;
    private final IMovimientoBO movimientoBO;
    private final IProductoBO productoBO;
    private final ReportePDFMovimientos reporte = new ReportePDFMovimientos();

    /**
     * Creates new form PanelListadoProductos
     *
     * @param pantalla
     * @param panelCambiante
     * @param movimientoBO
     * @param productoBO
     */
    public InventarioPanelMovimientos(JFrame pantalla, JPanel panelCambiante, IMovimientoBO movimientoBO, IProductoBO productoBO) {
        initComponents();
        this.movimientoBO = movimientoBO;
        this.productoBO = productoBO;
        this.panelCambiante = panelCambiante;
        this.pantalla = pantalla;
        this.metodosIniciales();
    }

    private void metodosIniciales() {
        this.configuracionInicialTabla();
        this.buscarTabla();
    }

    private void configuracionInicialTabla() {
        ActionListener onDetallesClickListener = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                    //Metodo para disminuir
                    detalles();
                    metodosIniciales();
                } catch (NegocioException ex) {
                    System.out.println("Error: " + ex.getMessage());
                }
            }
        };
        int indiceColumnaDetalles = 4;
        TableColumnModel modeloColumnas = this.tablaMovimientos.getColumnModel();
        modeloColumnas.getColumn(indiceColumnaDetalles)
                .setCellRenderer(new JButtonRenderer("Detalles"));
        modeloColumnas.getColumn(indiceColumnaDetalles)
                .setCellEditor(new JButtonCellEditor("Detalles", onDetallesClickListener));
        
    }

    private void detalles() throws NegocioException {
        ObjectId id = this.getIdSeleccionadoTabla();

        InventarioPanelMovimientosDetalles panelMovimiento = new InventarioPanelMovimientosDetalles(pantalla, panelCambiante, movimientoBO, productoBO, id);
        this.setLayout(new BorderLayout());
        this.removeAll();
        this.add(panelMovimiento, BorderLayout.CENTER);
        this.revalidate();
        this.repaint();
    }

    private ObjectId getIdSeleccionadoTabla() {
        int indiceFilaSeleccionada = this.tablaMovimientos.getSelectedRow();
        if (indiceFilaSeleccionada != -1) {
            DefaultTableModel modelo = (DefaultTableModel) this.tablaMovimientos.getModel();
            int indiceColumnaId = 0;
            Object valor = modelo.getValueAt(indiceFilaSeleccionada, indiceColumnaId);
            if (valor instanceof ObjectId) {
                return (ObjectId) valor;
            } else {

                System.out.println("El valor en la columna ID no es un ObjectId");
                return null;
            }
        } else {
            return null;
        }
    }

    private void buscarTabla() {
        try {
            List<MovimientoTablaDTO> movimientosTablaLista = this.movimientoBO.obtenerTablaMovimientos();
            DefaultTableModel modelo = (DefaultTableModel) this.tablaMovimientos.getModel();
            modelo.setRowCount(0);
            this.agregarRegistrosTabla(movimientosTablaLista);
        } catch (NegocioException ex) {
            System.out.println(ex.getMessage());
        }
    }

    private void agregarRegistrosTabla(List<MovimientoTablaDTO> movimientosLista) {

        DefaultTableModel modeloTabla = (DefaultTableModel) this.tablaMovimientos.getModel();
        if (!movimientosLista.isEmpty()) {
            movimientosLista.forEach(row -> {
                Object[] fila = new Object[7];
                fila[0] = row.getId();
                fila[1] = row.getNombreProducto();
                fila[2] = row.getTipoMovimiento();
                fila[3] = row.getCantidad();

                modeloTabla.addRow(fila);
            });
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelFondo = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaMovimientos = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnVolver = new javax.swing.JButton();
        btnReporte = new javax.swing.JButton();

        setMinimumSize(new java.awt.Dimension(1000, 494));
        setPreferredSize(new java.awt.Dimension(1000, 494));

        panelFondo.setBackground(new java.awt.Color(255, 255, 255));
        panelFondo.setMinimumSize(new java.awt.Dimension(1000, 494));
        panelFondo.setPreferredSize(new java.awt.Dimension(1000, 494));
        panelFondo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tablaMovimientos.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        tablaMovimientos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Producto", "Tipo Movimiento", "Cantidad", "Detalles"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaMovimientos);

        panelFondo.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 940, 280));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        jLabel1.setText("Listado de Movimientos");
        panelFondo.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, -1, -1));

        btnVolver.setBackground(new java.awt.Color(243, 183, 183));
        btnVolver.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btnVolver.setText("Volver");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });
        panelFondo.add(btnVolver, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 380, 210, 50));

        btnReporte.setBackground(new java.awt.Color(103, 80, 164));
        btnReporte.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btnReporte.setForeground(new java.awt.Color(255, 255, 255));
        btnReporte.setText("Generar Reporte");
        btnReporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReporteActionPerformed(evt);
            }
        });
        panelFondo.add(btnReporte, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 380, 230, 50));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelFondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelFondo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        InventarioPanelListado panelInventario = new InventarioPanelListado(pantalla, panelCambiante, movimientoBO, productoBO);
        panelCambiante.setLayout(new BorderLayout());
        panelCambiante.removeAll();
        panelCambiante.add(panelInventario, BorderLayout.CENTER);
        panelCambiante.revalidate();
        panelCambiante.repaint();
    }//GEN-LAST:event_btnVolverActionPerformed

    private void btnReporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReporteActionPerformed
        try {
            reporte.generarReporteMovimientos(movimientoBO.obtenerListaMovimientos(), "reporte_movimientos.pdf");
        } catch (NegocioException ex) {
            JOptionPane.showMessageDialog(this, "Error al generar el reporte: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnReporteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMovimientos;
    private javax.swing.JButton btnMovimientos1;
    private javax.swing.JButton btnMovimientos2;
    private javax.swing.JButton btnReporte;
    private javax.swing.JButton btnVolver;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelFondo;
    private javax.swing.JTable tablaMovimientos;
    // End of variables declaration//GEN-END:variables
}
